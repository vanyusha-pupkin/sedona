
//MIXIN list-reset
@mixin list-reset () {
  margin: 0;
  padding: 0;

  list-style: none;
}

//MIXIN font-face
@mixin font-face ($family, $src, $local-name-1, $local-name-2, $weight: normal, $style: normal) {
  @font-face {
    font-family: $family;
    font-style: $style;
    font-weight: $weight;
    font-display: swap;
    src:  local($local-name-1),
          local($local-name-2),
          url('#{$folder-fonts + $src}.woff2') format('woff2'),
          url('#{$folder-fonts + $src}.woff') format('woff');
  }
}

//MIXIN background-image-webp
@mixin background-image-webp($file, $extension) {
  .no-webp & {
    background-image: url($file +"."+ $extension);
  }

  .webp & {
    background-image: url($file + ".webp");
  }
}

//FUNCTION photoshop-drop-shadow

@function pi() {
  @return 3.14159265359;
}

@function pow($number, $exp) {
  $value: 1;
  @if $exp > 0 {
    @for $i from 1 through $exp {
      $value: $value * $number;
    }
  } @else if $exp < 0 {
    @for $i from 1 through -$exp {
      $value: $value / $number;
    }
  }
  @return $value;
}

@function fact($number) {
  $value: 1;
  @if $number > 0 {
    @for $i from 1 through $number {
      $value: $value * $i;
    }
  }
  @return $value;
}

@function rad($angle) {
  $unit: unit($angle);
  $unitless: $angle / ($angle * 0 + 1);
  // If the angle has 'deg' as unit, convert to radians.
  @if $unit == deg {
    $unitless: $unitless / 180 * pi();
  }
  @return $unitless;
}

@function sin($angle) {
  $sin: 0;
  $angle: rad($angle);
  // Iterate a bunch of times.
  @for $i from 0 through 10 {
    $sin: $sin + pow(-1, $i) * pow($angle, (2 * $i + 1)) / fact(2 * $i + 1);
  }
  @return $sin;
}

@function cos($angle) {
  $cos: 0;
  $angle: rad($angle);
  // Iterate a bunch of times.
  @for $i from 0 through 10 {
    $cos: $cos + pow(-1, $i) * pow($angle, 2 * $i) / fact(2 * $i);
  }
  @return $cos;
}

@function photoshop-drop-shadow ($angle: 0, $distance: 0, $spread: 0, $size: 0, $color: #000, $inner: false) {
  $angle: (180 - $angle) * pi() / 180; // convert to radians
  $h-shadow: round(cos($angle) * $distance);
  $v-shadow: round(sin($angle) * $distance);
  $css-spread: $size * $spread/100;
  $blur: ($size - $css-spread);
  $inset: if($inner != false, 'inset', '');

  $result: #{$h-shadow} #{$v-shadow} #{$blur} #{$css-spread} #{$color} #{unquote($inset)};

  @return $result;
}
